{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["\"use strict\";\n(function () {\n    document.addEventListener('DOMContentLoaded', function () {\n\n        let labyrinth = new function () {\n            let labArray = [];\n            let mainContent = document.getElementById(\"main_content\");\n            //this.navLink = document.querySelectorAll(\"ul.nav-tabs > li\");\n            let quantityPerSide = 20;\n            this.random = function (min, max, exclude = false) {\n                let rand = Math.floor(min + Math.random() * (max - min + 1));\n                while (exclude === rand) {\n                    rand = Math.floor(min + Math.random() * (max - min + 1));\n                }\n                \n                return rand;\n            };\n            this.getClass = function (number) {\n                let classes = [\"top \", \"bottom \", \"left \", \"right \"];\n                return (number >=0 && number <= 3) ? classes[number] : \"empty \";\n            };\n            this.generate = function () {\n                let labID = document.getElementById(\"labyrinth\");\n                let labWidth = labID.offsetWidth;\n                labID.innerHTML = \"\";\n                quantityPerSide = document.querySelector(\"#labyrinth_level option:checked\").dataset.level;\n\n                createLabArray();\n                fixLabArray();\n                for (let i = 0; i < quantityPerSide; i++) {\n\n                    //let newTr = document.createElement(\"tr\");\n\n                    for (let j = 0; j < quantityPerSide; j++) {\n\n                        let newDiv = document.createElement(\"div\");\n\n                        newDiv.className = \"square \";\n                        newDiv.className += labArray[i][j];\n                        let CSS = {\n                            \"width\": Math.floor(labWidth / quantityPerSide) + \"px\",\n                            \"height\": Math.floor(labWidth / quantityPerSide) + \"px\"\n                       /*     \"marginTop\": - (+newDiv.classList.contains(\"top\") + newDiv.classList.contains(\"bottom\")) + \"px\",\n                            \"marginRight\": - (+newDiv.classList.contains(\"left\") + newDiv.classList.contains(\"right\")) + \"px\",\n                            \"marginBottom\":  - (+newDiv.classList.contains(\"top\") + newDiv.classList.contains(\"bottom\")) + \"px\",\n                            \"marginLeft\": - (+newDiv.classList.contains(\"left\") + newDiv.classList.contains(\"right\")) + \"px\"*/\n                        };\n                        for (let attribute in CSS) {\n\n                            if (CSS.hasOwnProperty(attribute)) {\n                                newDiv.style[attribute] = CSS[attribute];\n                            }\n                        }\n                        labID.appendChild(newDiv);\n                    }\n                }\n            };\n            this.ajaxLoad = function (page) {\n\n                if (page != undefined) {\n\n                    mainContent.innerHTML = \"\";\n\n                    var request = new XMLHttpRequest();\n\n                    request.open(\"GET\", \"partials/\" + page + \".html\", true);\n\n                    request.onprogress = function () {\n                        mainContent.innerHTML = \"<span class='ajaxInfo'>Loading...</span>\";\n                    };\n\n                    request.onload = function (e) {\n\n                        if (request.readyState === 4) {\n\n                            // Check if the get was successful.\n                            if (request.status === 200) {\n                                mainContent.innerHTML = request.responseText;\n                            } else {\n                                mainContent.innerHTML = \"<span class='ajaxInfo'>DATA LOADING ERROR!</span>\";\n                                console.error(request.statusText);\n                            }\n                        }\n                    };\n\n                    request.send(null);\n                }\n\n            };\n            let createLabArray = function () {\n                labArray = [];\n                for (let i = 0; i < quantityPerSide; i++) {\n\n                    let row = [];\n\n                    /*\n                     top - 0\n                     bottom - 1\n                     left - 2\n                     right - 3\n                     */\n                    let topLineSwitcher = 0;\n                    for (let j = 0; j < quantityPerSide; j++) {\n                        let newElement = labyrinth.getClass(labyrinth.random(0, 3));\n                        row.push(newElement);\n                        /*if (i === 0) {\n\n                            if (j === 0) {\n                                row.push(labyrinth.getClass(0) + labyrinth.getClass(2));\n                            }\n                            else if (j === quantityPerSide - 1) {\n                                row.push(labyrinth.getClass(0) + labyrinth.getClass(3));\n                            }\n                            else {\n                                /!* if (newElement !== labyrinth.getClass(0)) {\n                                 topLineSwitcher++;\n                                 }\n                                 console.log(topLineSwitcher);\n                                 if (topLineSwitcher <= 2) {\n                                 row.push(labyrinth.getClass(labyrinth.random(1, 3)));\n                                 }\n                                 else {\n                                 row.push(labyrinth.getClass(0));\n                                 }*!/\n                                row.push(labyrinth.getClass(labyrinth.random(1, 3)));\n                            }\n                        }\n                        else if (j === 0) {\n                            if (i === quantityPerSide - 1) {\n                                row.push(labyrinth.getClass(1) + labyrinth.getClass(2));\n                            }\n                            else {\n                                row.push(labyrinth.getClass(2) + labyrinth.getClass(labyrinth.random(0, 3, 2)));\n                            }\n                        }\n                        else if (j === quantityPerSide - 1) {\n                            if (i === quantityPerSide - 1) {\n                                row.push(labyrinth.getClass(1) + labyrinth.getClass(3));\n                            }\n                            else {\n                                row.push(labyrinth.getClass(3) + labyrinth.getClass(labyrinth.random(0, 2)));\n                            }\n                        }\n                        else {\n                            row.push(newElement);\n                        }\n*/\n                    }\n                    labArray.push(row);\n                    row = [];\n                }\n            };\n\n            let fixLabArray = function () {\n\n                for (let i = 0; i < quantityPerSide; i++) {\n\n                    for (let j = 0; j < quantityPerSide; j++) {\n                        //console.log(labArray[i-1][j] === labyrinth.getClass(1));\n                        if (i > 0 && labArray[i-1][j] === labyrinth.getClass(1) && labArray[i][j] === labyrinth.getClass(0)) {\n                            labArray[i-1][j] = labyrinth.getClass(labyrinth.random(2, 3));\n                        }\n                    }\n                }\n\n                for (let i = 0; i < quantityPerSide; i++) {\n\n                    for (let j = 0; j < quantityPerSide; j++) {\n\n                        if (j > 0 && labArray[i][j-1] === labyrinth.getClass(3) && labArray[i][j] === labyrinth.getClass(2)) {\n                            labArray[i][j-1] = labyrinth.getClass(100);\n                        }\n                    }\n                }\n            }\n        };\n\n        document.querySelector(\"body\").addEventListener(\"click\", function (event) {\n\n            if (event.target.id === \"generate\") {\n                labyrinth.generate();\n            }\n\n        });\n\n     \n\n        document.querySelector(\"body\").addEventListener(\"change\", function (event) {\n\n            if (event.target.id === \"labyrinth_level\") {\n                labyrinth.generate();\n            }\n\n        });\n\n        let tabsArray = document.querySelectorAll(\"ul.nav-tabs li\");\n\n        for (let i = 0, tabsLength = tabsArray.length; i < tabsLength; i++) {\n            tabsArray[i].addEventListener(\"click\", function () {\n\n                document.querySelectorAll(\"nav li\").forEach(function (li) {\n                    li.classList.remove(\"active\")\n                });\n\n                this.classList.add(\"active\");\n\n                let page = this.dataset.page;\n\n                let defDiv = document.getElementById(\"default\");\n\n                if (page != undefined) {\n                    defDiv.style.display = \"none\";\n                    labyrinth.ajaxLoad(page);\n                }\n                else {\n                    document.getElementById(\"main_content\").innerHTML = \"\";\n                    defDiv.style.display = \"block\";\n                }\n\n            })\n        }\n\n\n        /*document.querySelectorAll(\"ul.nav-tabs li\").forEach(function (li) {\n\n            li.addEventListener(\"click\", function () {\n\n                document.querySelectorAll(\"nav li\").forEach(function (li) {\n                    li.classList.remove(\"active\")\n                });\n\n                this.classList.add(\"active\");\n\n                let page = this.dataset.page;\n\n                let defDiv = document.getElementById(\"default\");\n\n                if (page != undefined) {\n                    defDiv.style.display = \"none\";\n                    labyrinth.ajaxLoad(page);\n                }\n                else {\n                    document.getElementById(\"main_content\").innerHTML = \"\";\n                    defDiv.style.display = \"block\";\n                }\n\n            })\n        });*/\n        \n    });\n\n\n\n})();\n"]}