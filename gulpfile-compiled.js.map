{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"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","file":"gulpfile-compiled.js","sourcesContent":["/**\n * Created by severjason on 01.12.2015.\n */\n\nconst gulp = require('gulp'),\n    browserSync = require('browser-sync'),\n    del = require('del'),\n    runSequence = require('run-sequence'),\n    $ = require('gulp-load-plugins')();\n\n/**\n *  All paths\n */\nconst path = {\n    app: 'app',\n    scss: 'app/scss/**/*.scss',\n    images: 'app/images/**/*.*+(png|jpeg|jpg|svg|gif)',\n    fonts: ['bower_components/bootstrap-sass/assets/fonts/**/*'],\n    libJs: [\n        'bower_components/jquery/dist/jquery.min.js',\n        'bower_components/bootstrap-sass/assets/javascripts/bootstrap.min.js'],\n    js: ['app/js/**/*.js']\n};\n\n/**\n *  Browser sync\n */\ngulp.task('browserSync', function () {\n    browserSync({\n        server: {\n            baseDir: path.app + \"/\"\n        }\n    });\n});\n\n/**\n *  All paths\n */\ngulp.task('css', function () {\n    return gulp.src(path.scss)\n        .pipe($.sourcemaps.init())\n        .pipe($.plumber())\n        /*.pipe($.compass({\n            config_file: './config.rb',\n            css: path.app + '/css',\n            sass: path.app + '/scss'\n        }))*/\n        //.pipe($.sass({outputStyle: 'expanded'}))\n        .pipe($.sass({outputStyle: 'compressed'}))\n        .pipe($.sass.sync().on('error', $.sass.logError))\n        .pipe($.sourcemaps.write('.'))\n        //.pipe($.plumber.stop())\n        .pipe(gulp.dest(path.app + '/css'))\n        .pipe(browserSync.reload({\n            stream: true\n        }));\n});\n\n/**\n *  Move all bower js files to app/lib\n */\ngulp.task('js', function () {\n    return gulp.src(path.libJs)\n        .pipe(gulp.dest(path.app + '/lib'));\n});\n\n/**\n *  Concat all js and css into one file\n */\ngulp.task('useref', function () {\n    return gulp.src(path.app + '/**/*.html')\n        .pipe($.useref())\n        .pipe($.if('*.js', $.babel({\n            presets: ['es2015']\n        })))\n        .pipe($.if('*.js', $.uglify()))\n        .pipe($.if('*.css', $.cssnano()))\n        .pipe(gulp.dest('dist'));\n});\n\n/**\n *  Move all images to dist\n */\ngulp.task('img', function () {\n    return gulp.src(path.images)\n        .pipe($.cache($.imagemin({\n            optimizationLevel: 3,\n            progressive: true,\n            interlaced: false\n        })))\n        .pipe(gulp.dest('dist/images'))\n});\n\n/**\n *  AMove all fonts to dist and app\n */\ngulp.task('fonts', function () {\n    return gulp.src(path.fonts)\n        .pipe(gulp.dest(path.app + '/fonts'))\n        .pipe(gulp.dest('dist/fonts'));\n});\n\n/**\n *  Delete dist folder\n */\ngulp.task('clean', function (callback) {\n    del('dist');\n    return $.cache.clearAll(callback);\n});\n\n/**\n *  Delete all in dist folder except images\n */\ngulp.task('clean:dist', function (callback) {\n    del(['dist/**/*', '!dist/images', '!dist/images/**/*'], callback)\n});\n\n/**\n *  Watch task - for sass\n */\ngulp.task('watch', ['browserSync', 'css'], function () {\n    gulp.watch(path.scss, ['css']);\n    gulp.watch([\"app/*.html\",\"app/scss/*.scss\"]).on('change', browserSync.reload);\n});\n\n/**\n *  Task to builds an app for production\n */\ngulp.task('build', function () {\n    runSequence(['css', 'useref', 'img', 'fonts'])\n});\n\n/**\n *  Default task\n */\ngulp.task('default', function () {\n    runSequence(['css', 'js', 'fonts', 'browserSync', 'watch'])\n});\n\n"]}